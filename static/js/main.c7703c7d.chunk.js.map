{"version":3,"sources":["CodeTextarea/CodeTextarea.js","CodeWindow/CodeWindow.js","DinosaurBlock/DinosaurBlock.js","GameWindow/GameWindow.js","GameOptionInput/GameOptionInput.js","GameOptionsWindow/GameOptionsWindow.js","App/App.js","index.js"],"names":["CodeTextarea","className","onChange","event","props","changeCodeText","Component","CodeEditor","setState","codeText","target","value","checkCodeTextErrors","codeLines","state","split","programCommands","lineIndex","lineError","line","trim","regExpIndex","avalibleCommands","regExp","test","argument","substr","indexOf","push","command","console","error","setCodeData","RegExp","this","setGameState","gameState","onClick","runCode","disabled","stopCode","DinosaurBlock","isSitted","style","top","y","left","x","GameWindow","sleepDuration","codeData","dinosaurIsSitted","dinosaurCoordinates","gameWindowHeight","createGameField","gameField","Array","i","length","gameWindowWidth","j","addDinosaurOnField","log","sleepAnimation","makeDinosaurRun","makeDinosaurSit","makeDinosaurJump","changeDinosaurState","Number","newState","deleteDinosaurOnField","checkDinosaurInField","Promise","resolve","setTimeout","prevProps","startGameModeling","width","height","GameOptionsInput","optionName","type","size","stateChangeFunction","GameOptionsWindow","changeGameWindowWidth","isNaN","slice","changeGameWindowHeight","updateGameOptinons","App","newGameWindowWidth","newGameWindowHeight","newCodeData","a","ref","gameWindowRef","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7703c7d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport './CodeTextarea.css'\r\n\r\nclass CodeTextarea extends Component {\r\n    render() {\r\n        return (\r\n            <textarea \r\n                className='code-textarea' \r\n                onChange={ event => { this.props.changeCodeText(event) } }\r\n            ></textarea>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CodeTextarea;","import React, { Component } from 'react'\r\nimport CodeTextarea from '../CodeTextarea/CodeTextarea';\r\n\r\nimport './CodeWindow.css'\r\n\r\nclass CodeEditor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            codeText: 'Jump(3);\\nSit();\\nRun(4);'\r\n        }\r\n\r\n        this.avalibleCommands = [\r\n            {\r\n                command: 'jump',\r\n                regExp: new RegExp('^Jump\\\\(\\\\d*\\\\);$')\r\n            },\r\n            {\r\n                command: 'run',\r\n                regExp: new RegExp('^Run\\\\(\\\\d*\\\\);$')\r\n            },\r\n            {\r\n                command: 'sit',\r\n                regExp: new RegExp('^Sit\\\\(\\\\d*\\\\);$')\r\n            }\r\n        ];\r\n    }\r\n\r\n\r\n    changeCodeText = (event) => {\r\n        this.setState({\r\n            codeText: event.target.value\r\n        });\r\n    }\r\n\r\n\r\n    // Проверка кода на ошибки\r\n    checkCodeTextErrors = () => {\r\n        let codeLines = this.state.codeText.split('\\n')\r\n        let programCommands = [];\r\n\r\n        // Проходимся по строкам кода\r\n        for (let lineIndex in codeLines) {\r\n            let lineError = true\r\n            let line = codeLines[lineIndex].trim()\r\n\r\n            if (line === '') \r\n                continue;\r\n\r\n            // Проверям удовлетворяет ли строка доступным командам\r\n            for (let regExpIndex in this.avalibleCommands) {\r\n                if ( this.avalibleCommands[regExpIndex].regExp.test(line) ) {\r\n                    lineError = false;\r\n\r\n                    // Парсим аргументы команды\r\n                    let argument = line.substr(\r\n                        line.indexOf('(') + 1,\r\n                        line.indexOf(')') - line.indexOf('(') - 1\r\n                    ) || 1;\r\n\r\n                    programCommands.push({\r\n                        command: this.avalibleCommands[regExpIndex].command,\r\n                        argument: argument\r\n                    })\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (lineError) {\r\n                console.error(\"Ошибка в строке #\" + lineIndex + \":\\n\", line)\r\n                this.props.setCodeData([]);\r\n                return false\r\n            }\r\n        }\r\n\r\n        this.props.setCodeData(programCommands);\r\n        return true\r\n    }\r\n\r\n\r\n    runCode() {\r\n        if( this.checkCodeTextErrors() )\r\n            this.props.setGameState('runned')\r\n    }\r\n\r\n\r\n    stopCode() {\r\n        this.props.setGameState('stopping')\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='code-window'>\r\n                <CodeTextarea changeCodeText={ this.changeCodeText } />\r\n\r\n                <button \r\n                    className={\r\n                        this.props.gameState === 'stopped' ? 'code-window-button code-run-button' : 'code-window-button code-run-button code-window-button__disabled code-run-button__disabled'\r\n                    }\r\n                    onClick={ () => this.runCode() }\r\n                    disabled={\r\n                        this.props.gameState === 'stopped' ? false : true\r\n                    }\r\n                >Run Code</button>\r\n\r\n                <button \r\n                    className={\r\n                        this.props.gameState === 'runned' ? 'code-window-button code-stop-button' : 'code-window-button code-stop-button code-window-button__disabled code-stop-button__disabled'\r\n                    }\r\n                    onClick={ () => this.stopCode() }\r\n                    disabled={\r\n                        this.props.gameState === 'runned' ? false : true\r\n                    }\r\n                >Stop Code</button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CodeEditor;","import React, { Component } from 'react'\r\n\r\nimport './DinosaurBlock.css'\r\n\r\nclass DinosaurBlock extends Component {\r\n    render() {\r\n        return (\r\n            <div\r\n                className={ this.props.isSitted ? 'dinosaur-block dinosaur-block-sitted' : 'dinosaur-block' }\r\n                style={ this.props.isSitted ? \r\n                    {\r\n                        top: (this.props.y * 50) + 'px',\r\n                        left: (this.props.x * 50) + 'px'\r\n                    } :\r\n                    {\r\n                        top: ((this.props.y - 1) * 50) + 'px',\r\n                        left: (this.props.x * 50) + 'px'\r\n                    } \r\n                }\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DinosaurBlock;","import React, { Component } from 'react'\r\nimport DinosaurBlock from '../DinosaurBlock/DinosaurBlock'\r\n\r\nimport './GameWindow.css'\r\n\r\nclass GameWindow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            sleepDuration: 500,\r\n            codeData: [],\r\n            dinosaurIsSitted: false,\r\n            dinosaurCoordinates: {\r\n                x: 0,\r\n                y: this.props.gameWindowHeight - 1\r\n            }\r\n        }\r\n\r\n        this.createGameField();\r\n    }\r\n\r\n\r\n    // Создание 2мерного массива поля игры\r\n    async createGameField() {\r\n        await this.setState({\r\n            dinosaurIsSitted: false,\r\n            dinosaurCoordinates: {\r\n                x: 0,\r\n                y: this.props.gameWindowHeight - 1\r\n            }\r\n        });\r\n\r\n        let gameField = Array(this.props.gameWindowHeight)\r\n\r\n        for (let i = 0; i < gameField.length; i++) {\r\n            gameField[i] = Array(this.props.gameWindowWidth)\r\n        \r\n            for (let j = 0; j < gameField[i].length; j++) {\r\n                gameField[i][j] = ''\r\n            }\r\n        }\r\n\r\n        this.gameField = gameField;\r\n\r\n        // Добавляем динозавра в поле\r\n        this.addDinosaurOnField();\r\n    }\r\n\r\n\r\n    async startGameModeling() {\r\n        console.log('STARTED')\r\n        console.log(this.props.codeData)\r\n\r\n        await this.createGameField();\r\n\r\n        let codeData = this.props.codeData\r\n\r\n        if ( !(await this.sleepAnimation()) )\r\n            return false;\r\n\r\n        for (let i = 0; i < codeData.length; i++) {\r\n            switch (codeData[i].command) {\r\n                case 'run':         \r\n                    if ( !(await this.makeDinosaurRun(codeData[i].argument)) )\r\n                        return false;\r\n                    break;\r\n\r\n                case 'sit':\r\n                    if ( !(await this.makeDinosaurSit(codeData[i].argument)) )\r\n                        return false;\r\n                    break;\r\n                    \r\n                case 'jump':\r\n                    if ( !(await this.makeDinosaurJump(codeData[i].argument)) )\r\n                        return false;\r\n                    break;\r\n            \r\n                default:\r\n                    console.error('startGameModeling error! Command:', codeData[i])\r\n                    return false;\r\n            }   \r\n        }\r\n\r\n        this.props.setGameState('stopped')\r\n        return true;\r\n    }\r\n\r\n\r\n    addDinosaurOnField() {\r\n        if (this.state.dinosaurIsSitted) {\r\n            this.gameField[this.state.dinosaurCoordinates.y][this.state.dinosaurCoordinates.x] = 'dino'\r\n            this.gameField[this.state.dinosaurCoordinates.y][this.state.dinosaurCoordinates.x + 1] = 'dino'\r\n        }\r\n        else {\r\n            this.gameField[this.state.dinosaurCoordinates.y][this.state.dinosaurCoordinates.x] = 'dino'\r\n            this.gameField[this.state.dinosaurCoordinates.y - 1][this.state.dinosaurCoordinates.x] = 'dino'\r\n        }\r\n    }\r\n\r\n\r\n    deleteDinosaurOnField() {\r\n        if (this.state.dinosaurIsSitted) {\r\n            this.gameField[this.state.dinosaurCoordinates.y][this.state.dinosaurCoordinates.x] = ''\r\n            this.gameField[this.state.dinosaurCoordinates.y][this.state.dinosaurCoordinates.x + 1] = ''\r\n        }\r\n        else {\r\n            this.gameField[this.state.dinosaurCoordinates.y][this.state.dinosaurCoordinates.x] = ''\r\n            this.gameField[this.state.dinosaurCoordinates.y - 1][this.state.dinosaurCoordinates.x] = ''\r\n        }\r\n    }\r\n\r\n\r\n    // Функция бега динозавра\r\n    async makeDinosaurRun(argument) {\r\n        for (let i = 0; i < argument; i++) {\r\n            if ( !(await this.changeDinosaurState({\r\n                dinosaurCoordinates: {\r\n                    x: this.state.dinosaurCoordinates.x + 1,\r\n                    y: this.state.dinosaurCoordinates.y\r\n                } \r\n            })) )\r\n                return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    // Функция приседа динозавра\r\n    async makeDinosaurSit(argument) {\r\n        if ( !(await this.changeDinosaurState({ dinosaurIsSitted: true })) )\r\n            return false;\r\n\r\n        if ( !(await this.makeDinosaurRun(argument)) )\r\n            return false;\r\n\r\n        if ( !(await this.changeDinosaurState({ dinosaurIsSitted: false })) )\r\n            return false;\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    // Функция прыжка динозавра\r\n    async makeDinosaurJump(argument) {\r\n        if ( !(await this.changeDinosaurState({\r\n            dinosaurCoordinates: {\r\n                x: this.state.dinosaurCoordinates.x + 1,\r\n                y: this.state.dinosaurCoordinates.y - Number(argument)\r\n            } \r\n        })) )\r\n            return false;\r\n\r\n        if ( !(await this.changeDinosaurState({\r\n            dinosaurCoordinates: {\r\n                x: this.state.dinosaurCoordinates.x + 1,\r\n                y: this.state.dinosaurCoordinates.y + Number(argument)\r\n            } \r\n        })) )\r\n            return false;\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    // Функция прыжка динозавра\r\n    async changeDinosaurState(newState) {\r\n        this.deleteDinosaurOnField();\r\n\r\n        await this.setState(newState)\r\n\r\n        if ( !(this.checkDinosaurInField()) )\r\n            return false;\r\n        \r\n        this.addDinosaurOnField();\r\n        console.log(this.gameField);\r\n\r\n        if ( !(await this.sleepAnimation()) )\r\n            return false;\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    // Проверка не вышел ли динозавр за пределы поля\r\n    checkDinosaurInField() {\r\n        if (this.state.dinosaurIsSitted) {\r\n            if (this.state.dinosaurCoordinates.x < 0 ||\r\n                this.state.dinosaurCoordinates.x + 1 > this.props.gameWindowWidth - 1 ||\r\n                this.state.dinosaurCoordinates.y > this.props.gameWindowHeight - 1 ||\r\n                this.state.dinosaurCoordinates.y < 0 ){\r\n                    console.error('Динозавр за пределами поля!');\r\n                    this.props.setGameState('stopped');\r\n                    return false\r\n                }\r\n\r\n            return true\r\n        }\r\n        else {\r\n            if (this.state.dinosaurCoordinates.x < 0 ||\r\n                this.state.dinosaurCoordinates.x > this.props.gameWindowWidth - 1 ||\r\n                this.state.dinosaurCoordinates.y > this.props.gameWindowHeight - 1 ||\r\n                this.state.dinosaurCoordinates.y - 1 < 0 ){\r\n                    console.error('Динозавр за пределами поля!');\r\n                    this.props.setGameState('stopped');\r\n                    return false\r\n                }\r\n\r\n            return true\r\n        }\r\n    }\r\n    \r\n\r\n    async sleepAnimation() {\r\n        // Выполняем паузу, если не менялось состояние\r\n        if (this.props.gameState === 'runned') {\r\n            await new Promise(resolve => setTimeout(resolve, this.state.sleepDuration))\r\n            return true\r\n        }\r\n        // Не выполняем паузу и меняем состояние, если менялось состояние\r\n        else if (this.props.gameState === 'stopping') {\r\n            this.props.setGameState('stopped');\r\n            return false\r\n        }\r\n        else {\r\n            console.error('Error state in GameWindow.sleepAnimation()!', this.props.gameState);\r\n            return false\r\n        }\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n        // Обновить игру если поменялись размеры поля\r\n        if (prevProps.gameWindowWidth !== this.props.gameWindowWidth || prevProps.gameWindowHeight !== this.props.gameWindowHeight) \r\n            this.createGameField();\r\n        // Начать игру если поменялось состояние\r\n        else if (prevProps.gameState === 'stopped' && this.props.gameState === 'runned')\r\n            this.startGameModeling();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className='game-window' \r\n                style={{\r\n                    width: (this.props.gameWindowWidth * 50) + 'px',\r\n                    height: (this.props.gameWindowHeight * 50) + 'px'\r\n                }}\r\n            >\r\n\r\n                <DinosaurBlock\r\n                    isSitted={ this.state.dinosaurIsSitted }\r\n                    x={ this.state.dinosaurCoordinates.x }\r\n                    y={ this.state.dinosaurCoordinates.y }\r\n                />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameWindow;","import React, { Component } from 'react';\r\n\r\nimport './GameOptionInput.css';\r\n\r\nclass GameOptionsInput extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"game-option-block\">\r\n                <p className=\"game-option-name\">{this.props.optionName + ':'}</p>\r\n                <input type=\"text\" size=\"2\" onChange={event => { this.props.stateChangeFunction(event) }}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameOptionsInput;","import React, { Component } from 'react';\r\n\r\nimport GameOptionInput from '../GameOptionInput/GameOptionInput'\r\n\r\nclass GameOptionsWindow extends Component {ы\r\n\r\n    changeGameWindowWidth = (event) =>  {\r\n        if ( isNaN( Number(event.target.value) ) ){\r\n            event.target.value = event.target.value.slice(0, -1)\r\n        }\r\n        else {\r\n            this.setState({\r\n                gameWindowWidth: Number(event.target.value)\r\n            })\r\n        }\r\n    }\r\n\r\n    changeGameWindowHeight = (event) => {\r\n        if ( isNaN( Number(event.target.value) ) ){\r\n            event.target.value = event.target.value.slice(0, -1)\r\n        }\r\n        else {\r\n            this.setState({\r\n                gameWindowHeight: Number(event.target.value)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <GameOptionInput\r\n                    optionName=\"Ширина поля\"\r\n                    stateChangeFunction={ this.changeGameWindowWidth }\r\n                />\r\n                <GameOptionInput\r\n                    optionName=\"Высота поля\"\r\n                    stateChangeFunction={ this.changeGameWindowHeight }\r\n                />\r\n\r\n                <button \r\n                    onClick={ () => this.props.updateGameOptinons(this.state.gameWindowWidth, this.state.gameWindowHeight) }\r\n                >Подтвердить</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameOptionsWindow;","import React, { Component } from 'react'\r\nimport CodeWindow from '../CodeWindow/CodeWindow';\r\nimport GameWindow from '../GameWindow/GameWindow';\r\nimport GameOptionsWindow from '../GameOptionsWindow/GameOptionsWindow'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            gameWindowWidth: 10,\r\n            gameWindowHeight: 6,\r\n\r\n            gameState: 'stopped',\r\n            codeData: []\r\n        }\r\n    }\r\n\r\n\r\n    updateGameOptinons = (newGameWindowWidth, newGameWindowHeight) => {\r\n        this.setState({\r\n            gameWindowWidth: newGameWindowWidth,\r\n            gameWindowHeight: newGameWindowHeight\r\n        });\r\n    }\r\n\r\n\r\n    setCodeData = async (newCodeData) => {\r\n        await this.setState({\r\n            codeData: newCodeData\r\n        });\r\n    }\r\n\r\n\r\n    setGameState = async (newState) => {\r\n        await this.setState({\r\n            gameState: newState\r\n        });\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <GameWindow\r\n                    gameWindowWidth={ this.state.gameWindowWidth }\r\n                    gameWindowHeight={ this.state.gameWindowHeight } \r\n                    codeData={ this.state.codeData }\r\n                    gameState={ this.state.gameState }\r\n                    setGameState={ this.setGameState }\r\n                    ref={ this.gameWindowRef }\r\n                />\r\n\r\n                <GameOptionsWindow\r\n                    updateGameOptinons={ this.updateGameOptinons }\r\n                />\r\n\r\n                <CodeWindow \r\n                    setCodeData={ this.setCodeData }\r\n                    setGameState={ this.setGameState }\r\n                    gameState={ this.state.gameState }\r\n                />  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}